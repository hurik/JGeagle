package de.andreasgiemza.jgeagle;

import de.andreasgiemza.jgeagle.data.EagleFile;
import de.andreasgiemza.jgeagle.repo.JGit;
import de.andreasgiemza.jgeagle.data.GetWorkingCopyFiles;
import de.andreasgiemza.jgeagle.gui.EagleFilesTree;
import de.andreasgiemza.jgeagle.gui.CommitsTables;
import de.andreasgiemza.jgeagle.gui.SheetsAndDiffImage;
import de.andreasgiemza.jgeagle.options.Options;
import java.awt.Toolkit;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.revwalk.RevCommit;

/**
 *
 * @author hurik
 */
public class JGeagle extends javax.swing.JFrame {

    private final Options options;
    private final EagleFilesTree eagleFilesTree;
    private final CommitsTables commitsTables;
    private final SheetsAndDiffImage sheetsAndDiffImage;
    private JGit jGit;

    /**
     * Creates new form JGeagle
     */
    public JGeagle() {
        initComponents();

        setLocation(new Double((Toolkit.getDefaultToolkit().getScreenSize().getWidth() / 2) - (this.getWidth() / 2)).intValue(),
                new Double((Toolkit.getDefaultToolkit().getScreenSize().getHeight() / 2) - (this.getHeight() / 2)).intValue());

        options = new Options();
        eagleFilesTree = new EagleFilesTree(this, eagleFilesJTree);
        commitsTables = new CommitsTables(this, oldCommitsTable, newCommitsTable);
        sheetsAndDiffImage = new SheetsAndDiffImage(
                options,
                sheetComboBox,
                sheetButton,
                diffImageButton);
    }

    public void eagleFileSelected(EagleFile eagleFile) {
        if (eagleFile == null) {
            commitsTables.reset();
            return;
        }

        try {
            eagleFile.getFileData(jGit);
            commitsTables.updateOldCommitsTable(eagleFile);
            commitsTables.resetNewCommitsTable();
            sheetsAndDiffImage.reset();
        } catch (IOException | GitAPIException ex) {
            Logger.getLogger(JGeagle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void oldCommitSelected(EagleFile eagleFile, RevCommit oldCommit) {
        commitsTables.updateNewCommitsTable(eagleFile, oldCommit);
        sheetsAndDiffImage.reset();
    }

    public void newCommitSelected(EagleFile eagleFile, RevCommit oldCommit, RevCommit newCommit) {
        if (eagleFile.getFileExtension().equals(EagleFile.BRD)) {
            sheetsAndDiffImage.brdSelected();
        } else {
            sheetsAndDiffImage.schSelected(eagleFile, oldCommit, newCommit);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        repositoryFileChooser = new javax.swing.JFileChooser();
        repositoryPanel = new javax.swing.JPanel();
        repositoryTextField = new javax.swing.JTextField();
        repositoryButton = new javax.swing.JButton();
        eagleFilesPanel = new javax.swing.JPanel();
        eagleFilesScrollPane = new javax.swing.JScrollPane();
        eagleFilesJTree = new javax.swing.JTree();
        eagleFilesExpandAllButton = new javax.swing.JButton();
        eagleFilesCollapseAllButton = new javax.swing.JButton();
        commitsPanel = new javax.swing.JPanel();
        oldCommitsPanel = new javax.swing.JPanel();
        oldCommitsScrollPane = new javax.swing.JScrollPane();
        oldCommitsTable = new javax.swing.JTable();
        newCommitsPanel = new javax.swing.JPanel();
        newCommitsScrollPane = new javax.swing.JScrollPane();
        newCommitsTable = new javax.swing.JTable();
        variousPanel = new javax.swing.JPanel();
        sheetPanel = new javax.swing.JPanel();
        sheetButton = new javax.swing.JButton();
        sheetComboBox = new javax.swing.JComboBox();
        diffImagePanel = new javax.swing.JPanel();
        diffImageButton = new javax.swing.JButton();
        optionsPanel = new javax.swing.JPanel();
        optionsButton = new javax.swing.JButton();

        repositoryFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JGeagle");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("de/andreasgiemza/jgeagle/resources/jgeagle.png")));

        repositoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Repository"));

        repositoryTextField.setEditable(false);

        repositoryButton.setText("Open");
        repositoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repositoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout repositoryPanelLayout = new javax.swing.GroupLayout(repositoryPanel);
        repositoryPanel.setLayout(repositoryPanelLayout);
        repositoryPanelLayout.setHorizontalGroup(
            repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, repositoryPanelLayout.createSequentialGroup()
                .addComponent(repositoryTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repositoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        repositoryPanelLayout.setVerticalGroup(
            repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(repositoryPanelLayout.createSequentialGroup()
                .addGroup(repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repositoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repositoryButton))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        eagleFilesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Files"));

        eagleFilesJTree.setModel(null);
        eagleFilesScrollPane.setViewportView(eagleFilesJTree);

        eagleFilesExpandAllButton.setText("Expand all");
        eagleFilesExpandAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eagleFilesExpandAllButtonActionPerformed(evt);
            }
        });

        eagleFilesCollapseAllButton.setText("Collapse all");
        eagleFilesCollapseAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eagleFilesCollapseAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eagleFilesPanelLayout = new javax.swing.GroupLayout(eagleFilesPanel);
        eagleFilesPanel.setLayout(eagleFilesPanelLayout);
        eagleFilesPanelLayout.setHorizontalGroup(
            eagleFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eagleFilesPanelLayout.createSequentialGroup()
                .addComponent(eagleFilesScrollPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(eagleFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(eagleFilesCollapseAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eagleFilesExpandAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        eagleFilesPanelLayout.setVerticalGroup(
            eagleFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eagleFilesPanelLayout.createSequentialGroup()
                .addComponent(eagleFilesExpandAllButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eagleFilesCollapseAllButton)
                .addContainerGap(75, Short.MAX_VALUE))
            .addComponent(eagleFilesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        commitsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Commits"));
        commitsPanel.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        oldCommitsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Old"));
        oldCommitsPanel.setLayout(new javax.swing.BoxLayout(oldCommitsPanel, javax.swing.BoxLayout.LINE_AXIS));

        oldCommitsTable.setAutoCreateRowSorter(true);
        oldCommitsScrollPane.setViewportView(oldCommitsTable);

        oldCommitsPanel.add(oldCommitsScrollPane);

        commitsPanel.add(oldCommitsPanel);

        newCommitsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("New"));
        newCommitsPanel.setLayout(new javax.swing.BoxLayout(newCommitsPanel, javax.swing.BoxLayout.LINE_AXIS));

        newCommitsTable.setAutoCreateRowSorter(true);
        newCommitsScrollPane.setViewportView(newCommitsTable);

        newCommitsPanel.add(newCommitsScrollPane);

        commitsPanel.add(newCommitsPanel);

        variousPanel.setLayout(new java.awt.GridLayout(1, 0));

        sheetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sheet"));
        sheetPanel.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        sheetButton.setText("Count");
        sheetButton.setEnabled(false);
        sheetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sheetButtonActionPerformed(evt);
            }
        });
        sheetPanel.add(sheetButton);

        sheetComboBox.setEnabled(false);
        sheetPanel.add(sheetComboBox);

        variousPanel.add(sheetPanel);

        diffImagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Diff image"));

        diffImageButton.setText("Make");
        diffImageButton.setEnabled(false);

        javax.swing.GroupLayout diffImagePanelLayout = new javax.swing.GroupLayout(diffImagePanel);
        diffImagePanel.setLayout(diffImagePanelLayout);
        diffImagePanelLayout.setHorizontalGroup(
            diffImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(diffImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );
        diffImagePanelLayout.setVerticalGroup(
            diffImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(diffImageButton)
        );

        variousPanel.add(diffImagePanel);

        optionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        optionsButton.setText("Customize");
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionsButton)
        );

        variousPanel.add(optionsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(repositoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eagleFilesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commitsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(variousPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(repositoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eagleFilesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commitsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(variousPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void repositoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repositoryButtonActionPerformed
        int returnVal = repositoryFileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            eagleFilesTree.reset();
            commitsTables.reset();

            Path repoDirectory = repositoryFileChooser.getSelectedFile().toPath();
            repositoryTextField.setText(repoDirectory.toString());

            List<EagleFile> eagleFiles = new LinkedList<>();
            GetWorkingCopyFiles gwcf = new GetWorkingCopyFiles(repoDirectory, eagleFiles);

            try {
                Files.walkFileTree(repoDirectory, gwcf);
                jGit = new JGit(repoDirectory);

                eagleFilesTree.buildAndDisplayTree(repoDirectory, eagleFiles);
            } catch (IOException | GitAPIException ex) {
                Logger.getLogger(JGeagle.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_repositoryButtonActionPerformed

    private void eagleFilesExpandAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eagleFilesExpandAllButtonActionPerformed
        eagleFilesTree.expandAll();
    }//GEN-LAST:event_eagleFilesExpandAllButtonActionPerformed

    private void eagleFilesCollapseAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eagleFilesCollapseAllButtonActionPerformed
        eagleFilesTree.collapseAll();
    }//GEN-LAST:event_eagleFilesCollapseAllButtonActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
        options.showOptionsPanel(this);
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void sheetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sheetButtonActionPerformed
        try {
            sheetsAndDiffImage.countSheets(
                    jGit,
                    commitsTables.getEagleFile(),
                    commitsTables.getOldCommit(),
                    commitsTables.getNewCommit());
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(JGeagle.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sheetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JGeagle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JGeagle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel commitsPanel;
    private javax.swing.JButton diffImageButton;
    private javax.swing.JPanel diffImagePanel;
    private javax.swing.JButton eagleFilesCollapseAllButton;
    private javax.swing.JButton eagleFilesExpandAllButton;
    private javax.swing.JTree eagleFilesJTree;
    private javax.swing.JPanel eagleFilesPanel;
    private javax.swing.JScrollPane eagleFilesScrollPane;
    private javax.swing.JPanel newCommitsPanel;
    private javax.swing.JScrollPane newCommitsScrollPane;
    private javax.swing.JTable newCommitsTable;
    private javax.swing.JPanel oldCommitsPanel;
    private javax.swing.JScrollPane oldCommitsScrollPane;
    private javax.swing.JTable oldCommitsTable;
    private javax.swing.JButton optionsButton;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JButton repositoryButton;
    private javax.swing.JFileChooser repositoryFileChooser;
    private javax.swing.JPanel repositoryPanel;
    private javax.swing.JTextField repositoryTextField;
    private javax.swing.JButton sheetButton;
    private javax.swing.JComboBox sheetComboBox;
    private javax.swing.JPanel sheetPanel;
    private javax.swing.JPanel variousPanel;
    // End of variables declaration//GEN-END:variables
}
